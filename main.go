package main

import (
	"flag"
	"fmt"
	"html/template"
	"math/rand"
	"os"
	"strings"
)

type PlayerName struct {
	User    string
	English string
	Dwarf   string
}

type Player struct {
	Name         PlayerName
	Profession   string
	Burrow       string
	Scum         bool
	RoleName     string
	RoleWiki     string
	RoleFlavor   string
	WinCondition string
}

var tmpl = template.Must(template.New("").Funcs(template.FuncMap{
	"RandomPlayer": func() Player { panic("unreachable") },
	"fields":       strings.Fields,
	"lower":        strings.ToLower,
}).Parse(`This post is generated by dwarf-mafia for the benefit of Club Ded. Do not share the contents of this post outside of Club Ded.

# Role summary

{{range .Players -}}
{{if not .Scum -}}
- {{.Name.User}}, {{.RoleWiki}}
{{end -}}
{{end -}}
{{range .Players -}}
{{if .Scum -}}
- {{.Name.User}}, {{.RoleWiki}}
{{end -}}
{{end}}
# Burrow summary
{{range $b := .Burrows}}
## {{$b}}

{{range $.Players -}}
{{if eq $b .Burrow -}}
- {{if .Scum}}*{{end}}{{.Name.User}}, <abbr title="{{.Name.English}}">{{.Name.Dwarf}}</abbr>, {{.Profession}}{{if .Scum}}*{{end}}
{{end -}}
{{end -}}
{{end}}
# Welcome private messages

{{range .Players -}}
## {{.Name.User}}

{{block "welcome" . -}}
Hello, **<abbr title="{{.Name.English}}">{{.Name.Dwarf}}</abbr>**! You are a <a href="http://dwarffortresswiki.org/DF2014:{{.Profession}}">{{.Profession}}</a> who works and sleeps in the **{{.Burrow}} <a href="http://wiki.mafiascum.net/index.php?title=Neighbor">burrow</a>**.

You are **<a href="http://wiki.mafiascum.net/index.php?title={{.RoleWiki}}">{{.RoleName}}</a>**. {{.RoleFlavor}} You win if **{{.WinCondition}}**.

{{end -}}
{{end -}}

# Opening posts

## Burrows

{{range $b := .Burrows -}}
### {{.}}

This is the **{{.}}** burrow. You may discuss anything game related in this channel at any time, but beware that there might be vampires among your ranks. A list of dwarves assigned to this burrow follows:

{{range $.Players -}}
{{if eq $b .Burrow -}}
- @{{.Name.User}}, {{.Profession}}
{{end -}}
{{end}}
{{end -}}

# <del>CSS</del><ins>LESS</ins>

` + "```" + `
[data-tid="???"] {
	&>[data-username="{{.Moderator}}"] { background-color: rgba(255,255,0,0.25); }
	a[itemprop="author"][data-username="{{.Moderator}}"] { &:before { content: 'Mebzuth “@'; } &:after { content: '” Tosidonrel'; } }
	a.plugin-mentions-a[href="https://what.thedailywtf.com/user/{{lower .Moderator}}"] { &:before { content: 'Mebzuth “'; } &:after { content: '” Tosidonrel'; } }
{{- range .Players}}
	a[itemprop="author"][data-username="{{.Name.User}}"] { &:before { content: '{{index (fields .Name.Dwarf) 0}} “@'; } &:after { content: '” {{index (fields .Name.Dwarf) 1}}'; } }
	a.plugin-mentions-a[href="https://what.thedailywtf.com/user/{{lower .Name.User}}"] { &:before { content: '{{index (fields .Name.Dwarf) 0}} “'; } &:after { content: '” {{index (fields .Name.Dwarf) 1}}'; } }
{{- end}}
}
` + "```" + `

`))

func main() {
	seed := flag.Int64("seed", 0, "seed for randomness")
	moderator := flag.String("gm", "ben_lubar", "game moderator")

	flag.Parse()

	if flag.NArg() == 0 {
		fmt.Fprintln(os.Stderr, "need 1 or more username on the command line")
		os.Exit(1)
	}

	if err := LanguageInit(); err != nil {
		panic(err)
	}

	// http://dwarffortresswiki.org/index.php/DF2014:Unit_type_token, but
	// without any of the meta-professions or the useless professions.
	professions := []string{"miner", "carpenter", "bowyer", "woodcutter", "engraver", "mason", "animal trainer", "hunter", "trapper", "furnace operator", "weaponsmith", "armorer", "blacksmith", "metalcrafter", "gem cutter", "gem setter", "woodcrafter", "stonecrafter", "leatherworker", "bone carver", "weaver", "clothier", "glassmaker", "potter", "glazer", "wax worker", "strand extractor", "fisherdwarf", "fish cleaner", "cheese maker", "milker", "cook", "thresher", "miller", "butcher", "tanner", "dyer", "planter", "herbalist", "brewer", "soap maker", "potash maker", "lye maker", "wood burner", "shearer", "spinner", "beekeeper", "mechanic", "siege engineer", "siege operator", "pump operator", "clerk", "trader", "architect", "diagnostician", "bone doctor", "suturer", "surgeon", "peasant", "gelder", "bard", "dancer", "sage", "philosopher", "mathematician", "historian", "astronomer", "naturalist", "chemist", "geographer", "scribe", "papermaker", "bookbinder", "tavern keeper"}
	burrows := []string{"crimson", "scarlet", "maroon"}

	r := rand.New(rand.NewSource(*seed))

	var players []Player

	for _, username := range flag.Args() {
		english, dwarf := GenerateName(r)
		profession := professions[r.Intn(len(professions))]
		players = append(players, Player{
			Name: PlayerName{
				User:    username,
				English: english,
				Dwarf:   dwarf,
			},
			Profession:   profession,
			RoleName:     "an average citizen",
			RoleWiki:     "Townie",
			RoleFlavor:   "",
			WinCondition: "all the vampires have been eliminated or nothing can prevent this from occurring",
		})
	}

	burrowers := r.Perm(flag.NArg())
	burrowShuffle := r.Perm(len(burrows))
	for i, j := range burrowers {
		players[j].Burrow = burrows[burrowShuffle[i%len(burrows)]]
	}

	const goonFlavor = "Each night you may choose one citizen to feed on. Only one vampire feeds per night to avoid suspicion."

	// From http://wiki.mafiascum.net/index.php?title=Normal_Game&oldid=119436#Roles
	type Role struct{ Name, Wiki, Flavor string }

	rolesTown := []Role{
		{
			Name:   "a night watchdwarf",
			Wiki:   "Bodyguard",
			Flavor: "Each night, you may select one dwarf to protect. If they are in danger, you will give your life to protect theirs.",
		},
		{
			Name:   "a coward",
			Wiki:   "Commuter",
			Flavor: "Each night, you may choose to sleep in your hiding place far from the fortress. This makes you immune to all night actions. You may only use this ability up to three times in the course of the game.",
		},
		{
			Name:   "an amateur detective",
			Wiki:   "Sane_Cop",
			Flavor: "Each night, you may select one dwarf to investigate. If successful, you will determine whether they are a vampire.",
		},
		{
			Name:   "a doctor",
			Wiki:   "Doctor",
			Flavor: "Each night, you may select one dwarf to protect. Your target will be protected from one night kill attempt. You will not be told if your protection was successful.",
		},
		{
			Name:   "a follower",
			Wiki:   "Follower",
			Flavor: "Each night, you may select one dwarf to watch. If they perform an action during that night, you will know what the action was, but not who they targeted.",
		},
		// Note: skipped Gunsmith because Dwarf Fortress doesn't have
		// guns and it would just make things confusing
		{
			Name:   "a dabbler in many trades",
			Wiki:   "Jack_of_All_Trades",
			Flavor: "Each night, you may select one dwarf to investigate, protect, kill, or distract. Investigating a dwarf tells you that dwarf's role, protecting a dwarf blocks one night kill attempt on them, killing a dwarf is murder, and distracting a dwarf prevents their night action. Each of these abilities may only be used once during the game.",
		},
		{
			Name:   "the sheriff",
			Wiki:   "Jailkeeper",
			Flavor: "Each night, you may lock one dwarf in a cage. This prevents them from acting but also prevents them from being killed. You may not lock yourself in a cage.",
		},
		{
			Name:   "a door enthusiast",
			Wiki:   "Motion_Detector",
			Flavor: "Each night, you may select one dwarf to watch. You will know if someone entered or left their bedroom after they were asleep, but not who or for what reason.",
		},
		// Note: skipped Neapolitan as we have a lot of power roles.
		// Note: skipped Neighbor and Neighborizer as the setup already
		// includes neighborhoods for all players.
		{
			Name:   "a drunk",
			Wiki:   "Roleblocker",
			Flavor: "Each night, you may select one dwarf to distract. A distracted dwarf will forget to perform an action at night.",
		},
		{
			Name:   "a detective",
			Wiki:   "Rolecop",
			Flavor: "Each night, you may select one dwarf to investigate. If successful, you will determine their role.",
		},
		{
			Name:   "terribly flatulent",
			Wiki:   "Rolestopper",
			Flavor: "Each night, you may select one dwarf to visit. Your farts smell so terrible that nobody will come near them.",
		},
		{
			Name:   "a stalker",
			Wiki:   "Tracker",
			Flavor: "Each night, you may select one dwarf to follow. If successful, you will know who they visited during the night, but not what they did during the visit.",
		},
		{
			Name:   "a graverobber",
			Wiki:   "Universal_Backup",
			Flavor: "You will inherit the special ability of the first dwarf to die with one.",
		},
		// Note: skipped Vanilla Cop
		{
			Name:   "a voyeur",
			Wiki:   "Voyeur",
			Flavor: "Each night, you may select one dwarf to watch. If they are targeted by an action during that night, you will know what the action was, but not who targeted them.",
		},
		{
			Name:   "a watcher",
			Wiki:   "Watcher",
			Flavor: "Each night, you may select one dwarf to watch. If they are targeted by an action during that night, you will know who targeted them, but not what the action was.",
		},
		{
			Name:   "a friendly neighbor",
			Wiki:   "Friendly_Neighbor",
			Flavor: "Each night, you may select one dwarf. You will leave a message for that dwarf proving you are not a vampire.",
		},
		{
			Name:   "only four years old",
			Wiki:   "Innocent_Child",
			Flavor: "At any point during the game, you may ask me to confirm that you are not a vampire in the public thread.",
		},
		// Note: skipped Mason as we cannot guarantee that there will
		// be more than one.
		{
			Name:   "a vigilante",
			Wiki:   "Vigilante",
			Flavor: "Each night, you may choose to kill one suspected vampire. You may only use this ability twice in the course of the game.",
		},
	}

	rolesScum := []Role{
		{
			Name:   "a night watchdwarf vampire",
			Wiki:   "Bodyguard",
			Flavor: goonFlavor + " Each night, you may select one dwarf (including vampires) to protect. If they are in danger, you will give your life to protect theirs.",
		},
		{
			Name:   "a vampire doctor",
			Wiki:   "Doctor",
			Flavor: goonFlavor + " Each night, you may select one dwarf (including vampires) to protect. Your target will be protected from one night kill attempt. You will not be told if your protection was successful.",
		},
		{
			Name:   "a vampire follower",
			Wiki:   "Follower",
			Flavor: goonFlavor + " Each night, you may select one dwarf (including vampires) to watch. If they perform an action during that night, you will know what the action was, but not who they targeted.",
		},
		{
			Name:   "a dabbler in many trades and also a vampire",
			Wiki:   "Jack_of_All_Trades",
			Flavor: goonFlavor + " Each night, you may select one dwarf (including vampires) to investigate, protect, kill, or distract. Investigating a dwarf tells you that dwarf's role, protecting a dwarf blocks one night kill attempt on them, killing a dwarf does not count towards your feeding quota, and distracting a dwarf prevents their night action. Each of these abilities may only be used once during the game.",
		},
		{
			Name:   "the vampire sheriff",
			Wiki:   "Jailkeeper",
			Flavor: goonFlavor + " Each night, you may lock one dwarf (including vampires) in a cage. This prevents them from acting but also prevents them from being killed. You may not lock yourself in a cage.",
		},
		{
			Name:   "a vampire door enthusiast",
			Wiki:   "Motion_Detector",
			Flavor: goonFlavor + " Each night, you may select one dwarf (including vampires) to watch. You will know if someone entered or left their bedroom after they were asleep, but not who or for what reason.",
		},
		// Note: skipped Neighbor and Neighborizer as the setup already
		// includes neighborhoods for all players.
		{
			Name:   "a drunk vampire",
			Wiki:   "Roleblocker",
			Flavor: goonFlavor + " Each night, you may select one dwarf (including vampires) to distract. A distracted dwarf will forget to perform an action at night.",
		},
		{
			Name:   "a vampire detective",
			Wiki:   "Rolecop",
			Flavor: goonFlavor + " Each night, you may select one dwarf (including vampires) to investigate. If successful, you will determine their role.",
		},
		{
			Name:   "a terribly flatulent vampire",
			Wiki:   "Rolestopper",
			Flavor: goonFlavor + " Each night, you may select one dwarf (including vampires) to visit. Your farts smell so terrible that nobody will come near them.",
		},
		{
			Name:   "a vampire stalker",
			Wiki:   "Tracker",
			Flavor: goonFlavor + " Each night, you may select one dwarf (including vampires) to follow. If successful, you will know who they visited during the night, but not what they did during the visit.",
		},
		{
			Name:   "a grave-robbing vampire",
			Wiki:   "Universal_Backup",
			Flavor: goonFlavor + " You will inherit the special ability of the first dwarf (including vampires) to die with one.",
		},
		// Note: skipped Vanilla Cop
		{
			Name:   "a vampire voyeur",
			Wiki:   "Voyeur",
			Flavor: goonFlavor + " Each night, you may select one dwarf (including vampires) to watch. If they are targeted by an action during that night, you will know what the action was, but not who targeted them.",
		},
		{
			Name:   "a vampire watcher",
			Wiki:   "Watcher",
			Flavor: goonFlavor + " Each night, you may select one dwarf (including vampires) to watch. If they are targeted by an action during that night, you will know who targeted them, but not what the action was.",
		},
		// Note: skipped Encryptor as the setup does not have a night
		// phase.
		{
			Name:   "a very stealthy vampire",
			Wiki:   "Ninja",
			Flavor: goonFlavor + " Your movements will not be detected by any investigative ability.",
		},
		{
			Name:   "a very strong vampire",
			Wiki:   "Strongman",
			Flavor: goonFlavor + " You may additionally request that the kill is unblockable. This ability can be used twice in the course of the game.",
		},
		// Note: skipped Traitor as it would make role PMs harder
	}

	powers := r.Perm(flag.NArg())[:flag.NArg()/4+r.Intn(flag.NArg()/4)]
	scum := r.Perm(flag.NArg())[:2+r.Intn(flag.NArg()/3)]

	for _, i := range scum {
		players[i].Scum = true
		players[i].RoleName = "a vampire"
		players[i].RoleWiki = "Goon"
		players[i].RoleFlavor = goonFlavor
		players[i].WinCondition = "the only citizens left in the fortress are vampires or nothing can prevent this from occurring"
	}

	for _, i := range powers {
		var role Role
		if players[i].Scum {
			role = rolesScum[r.Intn(len(rolesScum))]
		} else {
			role = rolesTown[r.Intn(len(rolesTown))]
		}

		players[i].RoleName = role.Name
		players[i].RoleWiki = role.Wiki
		players[i].RoleFlavor = role.Flavor
	}

	if err := tmpl.Funcs(template.FuncMap{
		"RandomPlayer": func() Player {
			return players[r.Intn(len(players))]
		},
	}).Execute(os.Stdout, map[string]interface{}{
		"Players":   players,
		"Burrows":   burrows,
		"Moderator": *moderator,
	}); err != nil {
		panic(err)
	}
}
